# Form implementation generated from reading ui file 'ticketpurchase.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1077, 776)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tbTicketPurchase = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tbTicketPurchase.setGeometry(QtCore.QRect(10, 20, 771, 531))
        self.tbTicketPurchase.setObjectName("tbTicketPurchase")
        self.tabTicketPurchase = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.tabTicketPurchase.setFont(font)
        self.tabTicketPurchase.setObjectName("tabTicketPurchase")
        self.lblName = QtWidgets.QLabel(parent=self.tabTicketPurchase)
        self.lblName.setGeometry(QtCore.QRect(30, 40, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.lblName.setFont(font)
        self.lblName.setObjectName("lblName")
        self.txtName = QtWidgets.QLineEdit(parent=self.tabTicketPurchase)
        self.txtName.setGeometry(QtCore.QRect(150, 50, 113, 22))
        self.txtName.setObjectName("txtName")
        self.lblAge = QtWidgets.QLabel(parent=self.tabTicketPurchase)
        self.lblAge.setGeometry(QtCore.QRect(30, 90, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.lblAge.setFont(font)
        self.lblAge.setObjectName("lblAge")
        self.txtAge = QtWidgets.QLineEdit(parent=self.tabTicketPurchase)
        self.txtAge.setGeometry(QtCore.QRect(150, 100, 113, 22))
        self.txtAge.setObjectName("txtAge")
        self.cmbSelection = QtWidgets.QComboBox(parent=self.tabTicketPurchase)
        self.cmbSelection.setGeometry(QtCore.QRect(150, 160, 101, 31))
        self.cmbSelection.setObjectName("cmbSelection")
        self.cmbSelection.addItem("")
        self.cmbSelection.addItem("")
        self.cmbSelection.addItem("")
        self.lblSelection = QtWidgets.QLabel(parent=self.tabTicketPurchase)
        self.lblSelection.setGeometry(QtCore.QRect(30, 160, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.lblSelection.setFont(font)
        self.lblSelection.setObjectName("lblSelection")
        self.grpNumberOfTickets = QtWidgets.QGroupBox(parent=self.tabTicketPurchase)
        self.grpNumberOfTickets.setGeometry(QtCore.QRect(320, 160, 161, 61))
        self.grpNumberOfTickets.setObjectName("grpNumberOfTickets")
        self.rd1 = QtWidgets.QRadioButton(parent=self.grpNumberOfTickets)
        self.rd1.setGeometry(QtCore.QRect(20, 30, 41, 21))
        self.rd1.setObjectName("rd1")
        self.rd2 = QtWidgets.QRadioButton(parent=self.grpNumberOfTickets)
        self.rd2.setGeometry(QtCore.QRect(70, 30, 51, 21))
        self.rd2.setObjectName("rd2")
        self.rd3 = QtWidgets.QRadioButton(parent=self.grpNumberOfTickets)
        self.rd3.setGeometry(QtCore.QRect(120, 30, 51, 21))
        self.rd3.setObjectName("rd3")
        self.btnCost = QtWidgets.QPushButton(parent=self.tabTicketPurchase)
        self.btnCost.setGeometry(QtCore.QRect(30, 260, 101, 31))
        self.btnCost.setObjectName("btnCost")
        self.btnPurchase = QtWidgets.QPushButton(parent=self.tabTicketPurchase)
        self.btnPurchase.setGeometry(QtCore.QRect(170, 260, 101, 31))
        self.btnPurchase.setObjectName("btnPurchase")
        self.btnClear = QtWidgets.QPushButton(parent=self.tabTicketPurchase)
        self.btnClear.setGeometry(QtCore.QRect(310, 260, 101, 31))
        self.btnClear.setObjectName("btnClear")
        self.btnExit = QtWidgets.QPushButton(parent=self.tabTicketPurchase)
        self.btnExit.setGeometry(QtCore.QRect(440, 260, 101, 31))
        self.btnExit.setObjectName("btnExit")
        self.lblCost = QtWidgets.QLabel(parent=self.tabTicketPurchase)
        self.lblCost.setGeometry(QtCore.QRect(40, 340, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.lblCost.setFont(font)
        self.lblCost.setObjectName("lblCost")
        self.txtTotalCost = QtWidgets.QLineEdit(parent=self.tabTicketPurchase)
        self.txtTotalCost.setGeometry(QtCore.QRect(140, 340, 113, 22))
        self.txtTotalCost.setObjectName("txtTotalCost")
        self.tbTicketPurchase.addTab(self.tabTicketPurchase, "")
        self.tabPurchasesMade = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.tabPurchasesMade.setFont(font)
        self.tabPurchasesMade.setObjectName("tabPurchasesMade")
        self.lstPurchasesMade = QtWidgets.QListWidget(parent=self.tabPurchasesMade)
        self.lstPurchasesMade.setGeometry(QtCore.QRect(30, 30, 661, 231))
        self.lstPurchasesMade.setObjectName("lstPurchasesMade")
        self.tbTicketPurchase.addTab(self.tabPurchasesMade, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1077, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tbTicketPurchase.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Connect actions
        self.price_dictionary = self.load_data("price.txt")
        self.btnCost.clicked.connect(self.calculate_cost)
        self.btnPurchase.clicked.connect(self.purchases_made)
        self.btnClear.clicked.connect(self.clear)
        self.btnExit.clicked.connect(QtWidgets.QApplication.quit)
        self.tbTicketPurchase.currentChanged.connect(self.display_data)

        # Clear purchases file at the start
        open("purchases_made.txt", "w").close()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Ticket Purchase System"))
        self.lblName.setText(_translate("MainWindow", "Enter Name"))
        self.lblAge.setText(_translate("MainWindow", "Enter Age"))
        self.cmbSelection.setItemText(0, _translate("MainWindow", "Toplevel"))
        self.cmbSelection.setItemText(1, _translate("MainWindow", "Midlevel"))
        self.cmbSelection.setItemText(2, _translate("MainWindow", "Courtside"))
        self.lblSelection.setText(_translate("MainWindow", "Select Seat Type"))
        self.grpNumberOfTickets.setTitle(_translate("MainWindow", "Select Number of Tickets"))
        self.rd1.setText(_translate("MainWindow", "1"))
        self.rd2.setText(_translate("MainWindow", "2"))
        self.rd3.setText(_translate("MainWindow", "3"))
        self.btnCost.setText(_translate("MainWindow", "Show Cost"))
        self.btnPurchase.setText(_translate("MainWindow", "Purchase"))
        self.btnClear.setText(_translate("MainWindow", "Clear"))
        self.btnExit.setText(_translate("MainWindow", "Exit"))
        self.lblCost.setText(_translate("MainWindow", "Total Cost"))
        self.tbTicketPurchase.setTabText(self.tbTicketPurchase.indexOf(self.tabTicketPurchase), _translate("MainWindow", "Ticket Purchase"))
        self.tbTicketPurchase.setTabText(self.tbTicketPurchase.indexOf(self.tabPurchasesMade), _translate("MainWindow", "Purchases Made"))

    def load_data(self, file_name):
        try:
            price = {}
            with open(file_name, "r") as fname:
                for line in fname:
                    seat_type, price_of_ticket = line.strip().split(",")
                    price[seat_type] = int(price_of_ticket)
            return price
        except FileNotFoundError:
            print("The file does not exist")
        except Exception as e:
            print(e)

    def calculate_cost(self):
        try:
            current_selection = self.cmbSelection.currentText()
            if self.rd1.isChecked():
                number_of_tickets = 1
            elif self.rd2.isChecked():
                number_of_tickets = 2
            elif self.rd3.isChecked():
                number_of_tickets = 3
            else:
                number_of_tickets = 0

            price_of_ticket = self.price_dictionary.get(current_selection)
            if price_of_ticket is None:
                print("Price not found for selection")
                self.txtTotalCost.setText("")
                return

            total_cost = price_of_ticket * number_of_tickets
            self.txtTotalCost.setText("$" + str(total_cost))
        except Exception as e:
            print(e)

    def purchases_made(self):
        try:
            name = self.txtName.text().strip()
            age = self.txtAge.text().strip()
            current_selection = self.cmbSelection.currentText()

            if self.rd1.isChecked():
                number_of_tickets = 1
            elif self.rd2.isChecked():
                number_of_tickets = 2
            elif self.rd3.isChecked():
                number_of_tickets = 3
            else:
                number_of_tickets = 0

            if not name or not age:
                return

            with open("purchases_made.txt", "a") as fname:
                fname.write(f"{name}, {age}, {current_selection}, {number_of_tickets}\n")
            print("Purchase recorded successfully.")
        except Exception as e:
            print(e)

    def clear(self):
        try:
            self.txtName.clear()
            self.txtAge.clear()
            self.cmbSelection.setCurrentIndex(0)
            self.rd1.setChecked(True)
            self.txtTotalCost.clear()
        except Exception as e:
            print(e)

    def display_data(self, index):
        try:
            if index == 0:
                self.lstPurchasesMade.clear()
            else:
                self.lstPurchasesMade.clear()
                with open("purchases_made.txt", "r") as fname:
                    for line in fname:
                        self.lstPurchasesMade.addItem(line.strip())
        except FileNotFoundError:
            print("No purchase data exists")
        except Exception as e:
            print(e)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
